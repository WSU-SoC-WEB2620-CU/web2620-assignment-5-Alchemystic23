@import "nav";


/*Create at least 10 variables and use those 
variables throughout the stylesheet.*/
$color1: #202020;
$color2: #000000;
$color3: #0d6efd;
$color3-2: #75a9f8;
$color4: #ddd;
$color5: #303030;
$color6: rgba(255, 255, 255, .5);
$color7: rgba(0, 0, 0, .1);
$color8: #fff;
$color9: #333;
$font-styles: 'Roboto Condensed', sans-serif; 


/*Create and use at least 2 mixins without 
arguments.*/
@mixin button_style{
  position: relative;
  display: inline-block;
  margin-top: 0.5em;
  padding: 0.50em 1.5em;
  background: $color3;
  border-radius: 6px;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 1.1em;
  color: $color8;
  transition: color 0.35s ease-in-out, background-color 0.35s ease-in-out;
  cursor: pointer;
}

@mixin button_hover{
  background: $color3-2;
  color: $color8 !important;
}


/*Nest as many of the rules as you can.
For example, the styles for .row and .container 
can be nested in one rule.
*/

//body nesting
body {
  background: $color1 url('/images/footer-bg.jpg') repeat;
  min-width: 1200px;
  margin: 0;
  padding: 0;

  &
  , input
  , textarea
  , select {
    font-family: $font-styles;
    font-weight: 300;
    font-size: 11pt;
    line-height: 1.75em;
  }
}


//header nesting
h1,
h2,
h3,
h4,
h5,
h6 {
  letter-spacing: 1px;
  text-transform: uppercase;
  font-weight: 300;

  a {
    color: inherit;
    text-decoration: none;
  }
}



strong,
b {
  font-weight: bold;
  color: $color2;
}

em,
i {
  font-style: italic;
}

a {
  color: $color3;
}

sub {
  position: relative;
  top: 0.5em;
  font-size: 0.8em;
}

sup {
  position: relative;
  top: -0.5em;
  font-size: 0.8em;
}

hr {
  border: 0;
  border-top: solid 1px $color4;
}

p,
ul,
ol,
dl,
table {
  margin-bottom: 1em;
}

//header nesting
header {
  margin-bottom: 2em;
  line-height: 1.7em;

  h2 {
    font-size: 2.5em;
  }

  .byline {
    display: block;
    margin: 0.5em 0 0 0;
    padding: 0 0 0.5em 0;
    text-transform: uppercase;
    font-size: 1.4em;
  }
}

//section nesting
section
, article {
  margin-bottom: 3em;

  &:last-child {
    margin-bottom: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}


blockquote {
  margin: 0;
  padding: 0;
  border: none;
  font-style: normal;
}

footer {
  margin-top: 1em;
}

//container nesting
.container {
  width: 1200px;
  margin-left: auto;
  margin-right: auto;

  .small {
    width: 900px;
  }

  .big {
    width: 100%;
    max-width: 1500px;
    min-width: 1200px;
  }
}

//row nesting
.row{
  margin-left: -50px;

  section
  , article{
    margin-bottom: 0;
  }

  [class*='column-'] {
    padding: 50px 0 0 50px;
    float: left;
    box-sizing: border-box;
  }

  &:after{
    content: '';
    display: block;
    clear: both;
    height: 0;
    }
}



.column-1,
.column-2,
.column-3,
.column-4,
.column-5,
.column-6,
.column-7.column-8,
.column-9,
.column-10,
.column-11,
.column-12 {
  width: 100%;
}


/*Create a list whose items are the numbers 1 through 12. 
Loop through this list and use interpolation to generate 
the .column-1 through .column-12 rules dynamically. 
Note that widths are calculated by dividing 100% over 12 
and then multiplying the result by the number of columns. 
*/
$columns: 1 2 3 4 5 6 7 8 9 10 11 12;
@media all and (min-width: 576px) {

  @each $col in $columns {
    .column-#{$col} {
      width: percentage($col / 12);
    }
  }   
}

/*Create a mixin named make-column with a 
single $width argument.*/
@mixin make-column($width) {
  width: percentage($width / 12);
}

//image nesting
.image {
  display: inline-block;

  img {
    display: block;
    width: 100%;
  }

  &.featured,
  &.full {
    display: block;
    width: 100%;
  }

  &.featured {
    margin: 0 0 2em 0;
  }

  &.full {
    margin-bottom: 2em;
  }

  &.left {
    float: left;
    margin: 0 2em 2em 0;
  }

  &.centered {
    display: block;
    margin: 0 0 2em 0;

    img {
      margin: 0 auto;
      width: auto;
    }
  }
}

//ul nesting
ul.default {
  margin: 0;
  padding: 0;
  list-style: none;

  li {
    display: block;
    padding: 2em 0em 1.25em 0em;
    border-top: 1px solid $color5;

    &:first-child {
      padding-top: 0em;
      border-top: none;
    }

    a {
      text-decoration: none;
      color: $color6;

      &:hover {
        text-decoration: underline;
      }
    }
  }
}


//ul styles1
ul.style1 {
  margin: 0;
  padding: 0;
  list-style: none;

  li {
    padding: 0.60em 0em;
    border-top: 1px solid;
    border-color: $color7;

    &:first-child {
      padding-top: 0;
      border-top: 0;
    }
  }
}

//ul styles2
ul.style2 {
  margin: 0;
  padding: 0;
  list-style: none;

  li {
    padding: 1.90em 0em 1.60em 0em;
    border-top: 1px solid;
    border-color: $color7;

    &:first-child {
      padding-top: 0;
      border-top: 0;
    }

    img {
      float: left;
      padding-right: 1em;
    }
  }
}

//ul styles3
ul.style5 {
  overflow: hidden;
  margin: 0em 0em 1em 0em;
  padding: 0em;
  list-style: none;

  li {
    float: left;
    padding: 0.25em 0.25em;
    line-height: 0;
  }
}

//button nesting
.button {
  @include button_style;

  &:hover {
    @include button_hover;
  }
}


//header nesting
.header {
  position: relative;
  background: $color8;

  .container {
    position: relative;
    padding: 4em 0em;
  }
}


//logo nesting
.logo {
  position: absolute;
  left: 0em;
  top: 3em;

  a {
    display: block;
    text-decoration: none;
    font-size: 2.8em;
    font-weight: 600;
  }
}


.banner {
  position: relative;
  padding: 12em 0em;
  background: url('/images/banner.jpg') no-repeat center;
  background-size: cover;
  color: $color8;
}

.page {
  position: relative;
  background: $color8;
}

.main {
  border-top: 1px solid;
  border-color: rgba(0, 0, 0, .2);
}

.sidebar header h2 {
  font-size: 1.6em;
}

//footer nesting
.footer {
  position: relative;
  color: rgba(255, 255, 255, .4);

  h2 {
    padding-bottom: 1.5em;
    font-size: 1.6em;
    color: $color8;
  }

  strong {
    color: rgba(255, 255, 255, .7);
  }
}


//copyright nesting
.copyright {
  position: relative;
  padding: 3em 0em;
  border-top: 1px solid $color5;
  letter-spacing: 1px;
  text-align: center;
  color: rgba(255, 255, 255, .4);

  a {
    text-decoration: none;
    color: rgba(255, 255, 255, .4) !important;
  }
}


//marketing nesting
.marketing {
  position: relative;

  header {
    h2 {
      font-size: 1.6em;
    }
  }
}


//featured nesting
.featured {
  position: relative;

  .divider {
    border-bottom: 1px solid $color5;
  }

  .box {
    background: $color8;
    padding: 1.4em;
    font-size: 0.95em;
    border-radius: 5px;
  }
}


//balloon nesting
.balloon {
  padding: 1.87em;
  background: url('/images/balloon-bg.jpg') repeat left top;
  border-radius: 5px;
  line-height: 180%;
  font-size: 1.2em;
  color: $color9;

  strong {
    color: $color9 !important;
  }
}

.ballon-bgbtm {
  height: 1.87em;
}


